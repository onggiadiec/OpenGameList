{"version":3,"sources":["item-detail-edit.component.ts"],"names":["ItemDetailEditComponent","itemService","router","activatedRoute","this","prototype","ngOnInit","_this","id","snapshot","params","get","subscribe","item","console","log","item_1","Item","onInsert","add","data","Id","navigate","error","onUpdate","update","onDelete","delete","onBack","onItemDetailView","__decorate","core_1","Component","selector","template","styles","exports_1"],"mappings":"8/BAkGAA,wBAAA,WAGI,QAAAA,yBACYC,YACAC,OACAC,gBAFAC,KAAAH,YAAAA,YACAG,KAAAF,OAAAA,OACAE,KAAAD,eAAAA,eAuDhB,MApDIH,yBAAAK,UAAAC,SAAA,WAAA,GAAAC,OAAAH,KACQI,IAAMJ,KAAKD,eAAeM,SAASC,OAAW,EAC9CF,IACAJ,KAAKH,YAAYU,IAAIH,IAAII,UACrB,SAAAC,MAAQ,MAAAN,OAAKM,KAAOA,OAEV,IAAPL,KACPM,QAAQC,IAAI,iCACZX,KAAKS,KAAO,GAAIG,QAAAC,KAAK,EAAG,WAAY,QAI5CjB,wBAAAK,UAAAa,SAAA,SAASL,MAAT,GAAAN,OAAAH,IACIA,MAAKH,YAAYkB,IAAIN,MAAMD,UACvB,SAACQ,MACGb,MAAKM,KAAOO,KACZN,QAAQC,IAAI,QAAUR,MAAKM,KAAKQ,GAAK,oBACrCd,MAAKL,OAAOoB,UAAU,MAE1B,SAACC,OAAU,MAAAT,SAAQC,IAAIQ,UAI/BvB,wBAAAK,UAAAmB,SAAA,SAASX,MAAT,GAAAN,OAAAH,IACIA,MAAKH,YAAYwB,OAAOZ,MAAMD,UAC1B,SAACQ,MACGb,MAAKM,KAAOO,KACZN,QAAQC,IAAI,QAAUR,MAAKM,KAAKQ,GAAK,sBACrCd,MAAKL,OAAOoB,UAAU,MAE1B,SAACC,OAAU,MAAAT,SAAQC,IAAIQ,UAI/BvB,wBAAAK,UAAAqB,SAAA,SAASb,MAAT,GAAAN,OAAAH,KACQI,GAAKK,KAAKQ,EACdjB,MAAKH,YAAY0B,OAAOnB,IAAII,UACxB,SAACQ,MACGN,QAAQC,IAAI,QAAUP,GAAK,sBAC3BD,MAAKL,OAAOoB,UAAU,MAE1B,SAACC,OAAU,MAAAT,SAAQC,IAAIQ,UAI/BvB,wBAAAK,UAAAuB,OAAA,WACIxB,KAAKF,OAAOoB,UAAU,MAG1BtB,wBAAAK,UAAAwB,iBAAA,SAAiBhB,MACbT,KAAKF,OAAOoB,UAAU,YAAaT,KAAKQ,MAxJhDrB,wBAAA8B,YAACC,OAAAC,WACGC,SAAU,mBACVC,SAAU,88CAiCVC,QAAS,k9CA0DbC,UAAA,0BAAApC","file":"item-detail-edit.component.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { Item } from \"./item\";\r\nimport { ItemService } from \"./item.service\";\r\n\r\n@Component({\r\n    selector: \"item-detail-edit\",\r\n    template: `\r\n    <div *ngIf=\"item\" class=\"item-container\">\r\n        <div class=\"item-tab-menu\">\r\n            <span class=\"selected\">Edit</span>\r\n            <span *ngIf=\"item.Id != 0\" (click)=\"onItemDetailView(item)\">View</span>\r\n        </div>\r\n        <div class=\"item-details\">\r\n            <div class=\"mode\">Edit Mode</div>\r\n            <h2>{{item.Title}}</h2>\r\n            <ul>\r\n                <li>\r\n                    <label>Title:</label>\r\n                    <input [(ngModel)]=\"item.Title\" placeholder=\"Insert the title...\"/>\r\n                </li>\r\n                <li>\r\n                    <label>Description:</label>\r\n                    <textarea [(ngModel)]=\"item.Description\" placeholder=\"Insert a suitable description...\"></textarea>\r\n                </li>\r\n            </ul>\r\n            <div *ngIf=\"item.Id == 0\" class=\"commands insert\">\r\n                <input type=\"button\" value=\"Save\" (click)=\"onInsert(item)\" />\r\n                <input type=\"button\" value=\"Cancel\" (click)=\"onBack()\" />\r\n            </div>\r\n            <div *ngIf=\"item.Id != 0\" class=\"commands update\">\r\n                <input type=\"button\" value=\"Update\" (click)=\"onUpdate(item)\" />\r\n                <input type=\"button\" value=\"Delete\" (click)=\"onDelete(item)\" />\r\n                <input type=\"button\" value=\"Back\" (click)=\"onBack()\" />\r\n                <input type=\"button\" value=\"Cancel\"\r\n                (click)=\"onItemDetailView(item)\" />\r\n            </div>\r\n        </div>\r\n        </div>\r\n    `,\r\n    styles: [`\r\n    .item-container {\r\n        width: 600px;\r\n        }\r\n        .item-tab-menu {\r\n        margin-right: 30px;\r\n        }\r\n        .item-tab-menu span {\r\n        background-color: #dddddd;\r\n        border: 1px solid #666666;\r\n        border-bottom: 0;\r\n        cursor: pointer;\r\n        display: block;\r\n        float: right;\r\n        margin: 0 0 -1px 5px;\r\n        padding: 5px 10px 4px 10px;\r\n        text-align: center;\r\n        width: 60px;\r\n        }\r\n        .item-tab-menu span.selected {\r\n        background-color: #eeeeee;\r\n        cursor: auto;\r\n        font-weight: bold;\r\n        padding-bottom: 5px;\r\n        }\r\n        .item-details {\r\n        background-color: #eeeeee;\r\n        border: 1px solid black;\r\n        clear: both;\r\n        margin: 0;\r\n        padding: 5px 10px;\r\n        }\r\n        .item-details * {\r\n        vertical-align: middle;\r\n        }\r\n        .item-details .mode {\r\n        font-size: 0.8em;\r\n        color: #777777;\r\n        }\r\n        .item-details ul li {\r\n        padding: 5px 0;\r\n        }\r\n        .item-details input[type=\"text\"] {\r\n        display: block;\r\n        width: 100%;\r\n        }\r\n        .item-details textarea {\r\n        display: block;\r\n        width: 100%;\r\n        height: 60px;\r\n        }\r\n        .commands {\r\n        text-align: right;\r\n        margin: 10px 20px 10px 10px;\r\n        }\r\n    `]\r\n})\r\n\r\nexport class ItemDetailEditComponent {\r\n    item: Item;\r\n\r\n    constructor(\r\n        private itemService: ItemService,\r\n        private router: Router,\r\n        private activatedRoute: ActivatedRoute\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        var id = +this.activatedRoute.snapshot.params[\"id\"];\r\n        if (id) {\r\n            this.itemService.get(id).subscribe(\r\n                item => this.item = item\r\n            );\r\n        } else if (id === 0) {\r\n            console.log(\"id is 0: adding a new item...\");\r\n            this.item = new Item(0, \"New Item\", null);\r\n        }\r\n    }\r\n\r\n    onInsert(item: Item) {\r\n        this.itemService.add(item).subscribe(\r\n            (data) => {\r\n                this.item = data;\r\n                console.log(\"Item \" + this.item.Id + \" has been added.\")\r\n                this.router.navigate([\"\"]);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n    }\r\n\r\n    onUpdate(item: Item) {\r\n        this.itemService.update(item).subscribe(\r\n            (data) => {\r\n                this.item = data;\r\n                console.log(\"Item \" + this.item.Id + \" has been updated.\");\r\n                this.router.navigate([\"\"]);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n    }\r\n\r\n    onDelete(item: Item) {\r\n        var id = item.Id;\r\n        this.itemService.delete(id).subscribe(\r\n            (data) => {\r\n                console.log(\"Item \" + id + \" has been deleted.\");\r\n                this.router.navigate([\"\"]);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n    }\r\n\r\n    onBack() {\r\n        this.router.navigate([\"\"]);\r\n    }\r\n\r\n    onItemDetailView(item: Item) {\r\n        this.router.navigate([\"item/view\", item.Id]);\r\n        }\r\n}"]}